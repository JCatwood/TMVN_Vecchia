% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nleqsv.R
\name{my_nleqslv}
\alias{my_nleqslv}
\title{Locally defined function for solving non-linear systems}
\usage{
my_nleqslv(x0, fn, jacTransFn, jacInvFn, ..., control = list())
}
\arguments{
\item{x0}{initial guess}

\item{fn}{non-linear system, fn: $R^{n} \rightarrow R^{n}$}

\item{jacTransFn}{function that computes Jacobian^{\top} \cdot fn}

\item{jacInvFn}{function that computes Jacobian^{-1} \cdot fn}

\item{...}{arguments to `fn`, `jacTransFn`, and `jacInvFn`}

\item{control}{a list of tuning parameters for optimization}
}
\value{
a list of `code` and `x`
code 1: qualifying `x` found
code 2: qualifying `x` not found after reaching `maxit`
code 3: qualifying `x` not found before reaching `maxit`
}
\description{
Locally defined function for solving non-linear systems
}
\examples{
Fn <- function(x){c(x[1]^2 + x[2]^2 - 2, exp(x[1] - 1) + x[2]^3 - 2)}
J <- function(x){matrix(c(2*x[1], 2*x[2],
                          exp(x[1] - 1), 3*x[2]^2), 2, 2, byrow=T)}
jac_trans_fn <- function(x){as.vector(t(J(x)) \%*\% Fn(x))}
jac_inv_fn <- function(x){as.vector(solve(J(x)) \%*\% Fn(x))}
x <- c(2, 0.5)
ret <- my_nleqslv(x, Fn, jac_trans_fn, jac_inv_fn)
cat("Solution is", ret$x, "where f(x) is", ret$obj, "and code is", ret$code,
    "\n")
}
